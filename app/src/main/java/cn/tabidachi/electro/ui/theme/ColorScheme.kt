package cn.tabidachi.electro.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme

val PyroLightColors = lightColorScheme(
    primary = pyro_theme_light_primary,
    onPrimary = pyro_theme_light_onPrimary,
    primaryContainer = pyro_theme_light_primaryContainer,
    onPrimaryContainer = pyro_theme_light_onPrimaryContainer,
    secondary = pyro_theme_light_secondary,
    onSecondary = pyro_theme_light_onSecondary,
    secondaryContainer = pyro_theme_light_secondaryContainer,
    onSecondaryContainer = pyro_theme_light_onSecondaryContainer,
    tertiary = pyro_theme_light_tertiary,
    onTertiary = pyro_theme_light_onTertiary,
    tertiaryContainer = pyro_theme_light_tertiaryContainer,
    onTertiaryContainer = pyro_theme_light_onTertiaryContainer,
    error = pyro_theme_light_error,
    errorContainer = pyro_theme_light_errorContainer,
    onError = pyro_theme_light_onError,
    onErrorContainer = pyro_theme_light_onErrorContainer,
    background = pyro_theme_light_background,
    onBackground = pyro_theme_light_onBackground,
    surface = pyro_theme_light_surface,
    onSurface = pyro_theme_light_onSurface,
    surfaceVariant = pyro_theme_light_surfaceVariant,
    onSurfaceVariant = pyro_theme_light_onSurfaceVariant,
    outline = pyro_theme_light_outline,
    inverseOnSurface = pyro_theme_light_inverseOnSurface,
    inverseSurface = pyro_theme_light_inverseSurface,
    inversePrimary = pyro_theme_light_inversePrimary,
    surfaceTint = pyro_theme_light_surfaceTint,
    outlineVariant = pyro_theme_light_outlineVariant,
    scrim = pyro_theme_light_scrim,
)

val PyroDarkColors = darkColorScheme(
    primary = pyro_theme_dark_primary,
    onPrimary = pyro_theme_dark_onPrimary,
    primaryContainer = pyro_theme_dark_primaryContainer,
    onPrimaryContainer = pyro_theme_dark_onPrimaryContainer,
    secondary = pyro_theme_dark_secondary,
    onSecondary = pyro_theme_dark_onSecondary,
    secondaryContainer = pyro_theme_dark_secondaryContainer,
    onSecondaryContainer = pyro_theme_dark_onSecondaryContainer,
    tertiary = pyro_theme_dark_tertiary,
    onTertiary = pyro_theme_dark_onTertiary,
    tertiaryContainer = pyro_theme_dark_tertiaryContainer,
    onTertiaryContainer = pyro_theme_dark_onTertiaryContainer,
    error = pyro_theme_dark_error,
    errorContainer = pyro_theme_dark_errorContainer,
    onError = pyro_theme_dark_onError,
    onErrorContainer = pyro_theme_dark_onErrorContainer,
    background = pyro_theme_dark_background,
    onBackground = pyro_theme_dark_onBackground,
    surface = pyro_theme_dark_surface,
    onSurface = pyro_theme_dark_onSurface,
    surfaceVariant = pyro_theme_dark_surfaceVariant,
    onSurfaceVariant = pyro_theme_dark_onSurfaceVariant,
    outline = pyro_theme_dark_outline,
    inverseOnSurface = pyro_theme_dark_inverseOnSurface,
    inverseSurface = pyro_theme_dark_inverseSurface,
    inversePrimary = pyro_theme_dark_inversePrimary,
    surfaceTint = pyro_theme_dark_surfaceTint,
    outlineVariant = pyro_theme_dark_outlineVariant,
    scrim = pyro_theme_dark_scrim,
)

val HydroLightColors = lightColorScheme(
    primary = hydro_theme_light_primary,
    onPrimary = hydro_theme_light_onPrimary,
    primaryContainer = hydro_theme_light_primaryContainer,
    onPrimaryContainer = hydro_theme_light_onPrimaryContainer,
    secondary = hydro_theme_light_secondary,
    onSecondary = hydro_theme_light_onSecondary,
    secondaryContainer = hydro_theme_light_secondaryContainer,
    onSecondaryContainer = hydro_theme_light_onSecondaryContainer,
    tertiary = hydro_theme_light_tertiary,
    onTertiary = hydro_theme_light_onTertiary,
    tertiaryContainer = hydro_theme_light_tertiaryContainer,
    onTertiaryContainer = hydro_theme_light_onTertiaryContainer,
    error = hydro_theme_light_error,
    errorContainer = hydro_theme_light_errorContainer,
    onError = hydro_theme_light_onError,
    onErrorContainer = hydro_theme_light_onErrorContainer,
    background = hydro_theme_light_background,
    onBackground = hydro_theme_light_onBackground,
    surface = hydro_theme_light_surface,
    onSurface = hydro_theme_light_onSurface,
    surfaceVariant = hydro_theme_light_surfaceVariant,
    onSurfaceVariant = hydro_theme_light_onSurfaceVariant,
    outline = hydro_theme_light_outline,
    inverseOnSurface = hydro_theme_light_inverseOnSurface,
    inverseSurface = hydro_theme_light_inverseSurface,
    inversePrimary = hydro_theme_light_inversePrimary,
    surfaceTint = hydro_theme_light_surfaceTint,
    outlineVariant = hydro_theme_light_outlineVariant,
    scrim = hydro_theme_light_scrim,
)

val HydroDarkColors = darkColorScheme(
    primary = hydro_theme_dark_primary,
    onPrimary = hydro_theme_dark_onPrimary,
    primaryContainer = hydro_theme_dark_primaryContainer,
    onPrimaryContainer = hydro_theme_dark_onPrimaryContainer,
    secondary = hydro_theme_dark_secondary,
    onSecondary = hydro_theme_dark_onSecondary,
    secondaryContainer = hydro_theme_dark_secondaryContainer,
    onSecondaryContainer = hydro_theme_dark_onSecondaryContainer,
    tertiary = hydro_theme_dark_tertiary,
    onTertiary = hydro_theme_dark_onTertiary,
    tertiaryContainer = hydro_theme_dark_tertiaryContainer,
    onTertiaryContainer = hydro_theme_dark_onTertiaryContainer,
    error = hydro_theme_dark_error,
    errorContainer = hydro_theme_dark_errorContainer,
    onError = hydro_theme_dark_onError,
    onErrorContainer = hydro_theme_dark_onErrorContainer,
    background = hydro_theme_dark_background,
    onBackground = hydro_theme_dark_onBackground,
    surface = hydro_theme_dark_surface,
    onSurface = hydro_theme_dark_onSurface,
    surfaceVariant = hydro_theme_dark_surfaceVariant,
    onSurfaceVariant = hydro_theme_dark_onSurfaceVariant,
    outline = hydro_theme_dark_outline,
    inverseOnSurface = hydro_theme_dark_inverseOnSurface,
    inverseSurface = hydro_theme_dark_inverseSurface,
    inversePrimary = hydro_theme_dark_inversePrimary,
    surfaceTint = hydro_theme_dark_surfaceTint,
    outlineVariant = hydro_theme_dark_outlineVariant,
    scrim = hydro_theme_dark_scrim,
)

val AnemoLightColors = lightColorScheme(
    primary = anemo_theme_light_primary,
    onPrimary = anemo_theme_light_onPrimary,
    primaryContainer = anemo_theme_light_primaryContainer,
    onPrimaryContainer = anemo_theme_light_onPrimaryContainer,
    secondary = anemo_theme_light_secondary,
    onSecondary = anemo_theme_light_onSecondary,
    secondaryContainer = anemo_theme_light_secondaryContainer,
    onSecondaryContainer = anemo_theme_light_onSecondaryContainer,
    tertiary = anemo_theme_light_tertiary,
    onTertiary = anemo_theme_light_onTertiary,
    tertiaryContainer = anemo_theme_light_tertiaryContainer,
    onTertiaryContainer = anemo_theme_light_onTertiaryContainer,
    error = anemo_theme_light_error,
    errorContainer = anemo_theme_light_errorContainer,
    onError = anemo_theme_light_onError,
    onErrorContainer = anemo_theme_light_onErrorContainer,
    background = anemo_theme_light_background,
    onBackground = anemo_theme_light_onBackground,
    surface = anemo_theme_light_surface,
    onSurface = anemo_theme_light_onSurface,
    surfaceVariant = anemo_theme_light_surfaceVariant,
    onSurfaceVariant = anemo_theme_light_onSurfaceVariant,
    outline = anemo_theme_light_outline,
    inverseOnSurface = anemo_theme_light_inverseOnSurface,
    inverseSurface = anemo_theme_light_inverseSurface,
    inversePrimary = anemo_theme_light_inversePrimary,
    surfaceTint = anemo_theme_light_surfaceTint,
    outlineVariant = anemo_theme_light_outlineVariant,
    scrim = anemo_theme_light_scrim,
)

val AnemoDarkColors = darkColorScheme(
    primary = anemo_theme_dark_primary,
    onPrimary = anemo_theme_dark_onPrimary,
    primaryContainer = anemo_theme_dark_primaryContainer,
    onPrimaryContainer = anemo_theme_dark_onPrimaryContainer,
    secondary = anemo_theme_dark_secondary,
    onSecondary = anemo_theme_dark_onSecondary,
    secondaryContainer = anemo_theme_dark_secondaryContainer,
    onSecondaryContainer = anemo_theme_dark_onSecondaryContainer,
    tertiary = anemo_theme_dark_tertiary,
    onTertiary = anemo_theme_dark_onTertiary,
    tertiaryContainer = anemo_theme_dark_tertiaryContainer,
    onTertiaryContainer = anemo_theme_dark_onTertiaryContainer,
    error = anemo_theme_dark_error,
    errorContainer = anemo_theme_dark_errorContainer,
    onError = anemo_theme_dark_onError,
    onErrorContainer = anemo_theme_dark_onErrorContainer,
    background = anemo_theme_dark_background,
    onBackground = anemo_theme_dark_onBackground,
    surface = anemo_theme_dark_surface,
    onSurface = anemo_theme_dark_onSurface,
    surfaceVariant = anemo_theme_dark_surfaceVariant,
    onSurfaceVariant = anemo_theme_dark_onSurfaceVariant,
    outline = anemo_theme_dark_outline,
    inverseOnSurface = anemo_theme_dark_inverseOnSurface,
    inverseSurface = anemo_theme_dark_inverseSurface,
    inversePrimary = anemo_theme_dark_inversePrimary,
    surfaceTint = anemo_theme_dark_surfaceTint,
    outlineVariant = anemo_theme_dark_outlineVariant,
    scrim = anemo_theme_dark_scrim,
)

val ElectroLightColors = lightColorScheme(
    primary = electro_theme_light_primary,
    onPrimary = electro_theme_light_onPrimary,
    primaryContainer = electro_theme_light_primaryContainer,
    onPrimaryContainer = electro_theme_light_onPrimaryContainer,
    secondary = electro_theme_light_secondary,
    onSecondary = electro_theme_light_onSecondary,
    secondaryContainer = electro_theme_light_secondaryContainer,
    onSecondaryContainer = electro_theme_light_onSecondaryContainer,
    tertiary = electro_theme_light_tertiary,
    onTertiary = electro_theme_light_onTertiary,
    tertiaryContainer = electro_theme_light_tertiaryContainer,
    onTertiaryContainer = electro_theme_light_onTertiaryContainer,
    error = electro_theme_light_error,
    errorContainer = electro_theme_light_errorContainer,
    onError = electro_theme_light_onError,
    onErrorContainer = electro_theme_light_onErrorContainer,
    background = electro_theme_light_background,
    onBackground = electro_theme_light_onBackground,
    surface = electro_theme_light_surface,
    onSurface = electro_theme_light_onSurface,
    surfaceVariant = electro_theme_light_surfaceVariant,
    onSurfaceVariant = electro_theme_light_onSurfaceVariant,
    outline = electro_theme_light_outline,
    inverseOnSurface = electro_theme_light_inverseOnSurface,
    inverseSurface = electro_theme_light_inverseSurface,
    inversePrimary = electro_theme_light_inversePrimary,
    surfaceTint = electro_theme_light_surfaceTint,
    outlineVariant = electro_theme_light_outlineVariant,
    scrim = electro_theme_light_scrim,
)

val ElectroDarkColors = darkColorScheme(
    primary = electro_theme_dark_primary,
    onPrimary = electro_theme_dark_onPrimary,
    primaryContainer = electro_theme_dark_primaryContainer,
    onPrimaryContainer = electro_theme_dark_onPrimaryContainer,
    secondary = electro_theme_dark_secondary,
    onSecondary = electro_theme_dark_onSecondary,
    secondaryContainer = electro_theme_dark_secondaryContainer,
    onSecondaryContainer = electro_theme_dark_onSecondaryContainer,
    tertiary = electro_theme_dark_tertiary,
    onTertiary = electro_theme_dark_onTertiary,
    tertiaryContainer = electro_theme_dark_tertiaryContainer,
    onTertiaryContainer = electro_theme_dark_onTertiaryContainer,
    error = electro_theme_dark_error,
    errorContainer = electro_theme_dark_errorContainer,
    onError = electro_theme_dark_onError,
    onErrorContainer = electro_theme_dark_onErrorContainer,
    background = electro_theme_dark_background,
    onBackground = electro_theme_dark_onBackground,
    surface = electro_theme_dark_surface,
    onSurface = electro_theme_dark_onSurface,
    surfaceVariant = electro_theme_dark_surfaceVariant,
    onSurfaceVariant = electro_theme_dark_onSurfaceVariant,
    outline = electro_theme_dark_outline,
    inverseOnSurface = electro_theme_dark_inverseOnSurface,
    inverseSurface = electro_theme_dark_inverseSurface,
    inversePrimary = electro_theme_dark_inversePrimary,
    surfaceTint = electro_theme_dark_surfaceTint,
    outlineVariant = electro_theme_dark_outlineVariant,
    scrim = electro_theme_dark_scrim,
)

val DendroLightColors = lightColorScheme(
    primary = dendro_theme_light_primary,
    onPrimary = dendro_theme_light_onPrimary,
    primaryContainer = dendro_theme_light_primaryContainer,
    onPrimaryContainer = dendro_theme_light_onPrimaryContainer,
    secondary = dendro_theme_light_secondary,
    onSecondary = dendro_theme_light_onSecondary,
    secondaryContainer = dendro_theme_light_secondaryContainer,
    onSecondaryContainer = dendro_theme_light_onSecondaryContainer,
    tertiary = dendro_theme_light_tertiary,
    onTertiary = dendro_theme_light_onTertiary,
    tertiaryContainer = dendro_theme_light_tertiaryContainer,
    onTertiaryContainer = dendro_theme_light_onTertiaryContainer,
    error = dendro_theme_light_error,
    errorContainer = dendro_theme_light_errorContainer,
    onError = dendro_theme_light_onError,
    onErrorContainer = dendro_theme_light_onErrorContainer,
    background = dendro_theme_light_background,
    onBackground = dendro_theme_light_onBackground,
    surface = dendro_theme_light_surface,
    onSurface = dendro_theme_light_onSurface,
    surfaceVariant = dendro_theme_light_surfaceVariant,
    onSurfaceVariant = dendro_theme_light_onSurfaceVariant,
    outline = dendro_theme_light_outline,
    inverseOnSurface = dendro_theme_light_inverseOnSurface,
    inverseSurface = dendro_theme_light_inverseSurface,
    inversePrimary = dendro_theme_light_inversePrimary,
    surfaceTint = dendro_theme_light_surfaceTint,
    outlineVariant = dendro_theme_light_outlineVariant,
    scrim = dendro_theme_light_scrim,
)

val DendroDarkColors = darkColorScheme(
    primary = dendro_theme_dark_primary,
    onPrimary = dendro_theme_dark_onPrimary,
    primaryContainer = dendro_theme_dark_primaryContainer,
    onPrimaryContainer = dendro_theme_dark_onPrimaryContainer,
    secondary = dendro_theme_dark_secondary,
    onSecondary = dendro_theme_dark_onSecondary,
    secondaryContainer = dendro_theme_dark_secondaryContainer,
    onSecondaryContainer = dendro_theme_dark_onSecondaryContainer,
    tertiary = dendro_theme_dark_tertiary,
    onTertiary = dendro_theme_dark_onTertiary,
    tertiaryContainer = dendro_theme_dark_tertiaryContainer,
    onTertiaryContainer = dendro_theme_dark_onTertiaryContainer,
    error = dendro_theme_dark_error,
    errorContainer = dendro_theme_dark_errorContainer,
    onError = dendro_theme_dark_onError,
    onErrorContainer = dendro_theme_dark_onErrorContainer,
    background = dendro_theme_dark_background,
    onBackground = dendro_theme_dark_onBackground,
    surface = dendro_theme_dark_surface,
    onSurface = dendro_theme_dark_onSurface,
    surfaceVariant = dendro_theme_dark_surfaceVariant,
    onSurfaceVariant = dendro_theme_dark_onSurfaceVariant,
    outline = dendro_theme_dark_outline,
    inverseOnSurface = dendro_theme_dark_inverseOnSurface,
    inverseSurface = dendro_theme_dark_inverseSurface,
    inversePrimary = dendro_theme_dark_inversePrimary,
    surfaceTint = dendro_theme_dark_surfaceTint,
    outlineVariant = dendro_theme_dark_outlineVariant,
    scrim = dendro_theme_dark_scrim,
)

val CryoLightColors = lightColorScheme(
    primary = cryo_theme_light_primary,
    onPrimary = cryo_theme_light_onPrimary,
    primaryContainer = cryo_theme_light_primaryContainer,
    onPrimaryContainer = cryo_theme_light_onPrimaryContainer,
    secondary = cryo_theme_light_secondary,
    onSecondary = cryo_theme_light_onSecondary,
    secondaryContainer = cryo_theme_light_secondaryContainer,
    onSecondaryContainer = cryo_theme_light_onSecondaryContainer,
    tertiary = cryo_theme_light_tertiary,
    onTertiary = cryo_theme_light_onTertiary,
    tertiaryContainer = cryo_theme_light_tertiaryContainer,
    onTertiaryContainer = cryo_theme_light_onTertiaryContainer,
    error = cryo_theme_light_error,
    errorContainer = cryo_theme_light_errorContainer,
    onError = cryo_theme_light_onError,
    onErrorContainer = cryo_theme_light_onErrorContainer,
    background = cryo_theme_light_background,
    onBackground = cryo_theme_light_onBackground,
    surface = cryo_theme_light_surface,
    onSurface = cryo_theme_light_onSurface,
    surfaceVariant = cryo_theme_light_surfaceVariant,
    onSurfaceVariant = cryo_theme_light_onSurfaceVariant,
    outline = cryo_theme_light_outline,
    inverseOnSurface = cryo_theme_light_inverseOnSurface,
    inverseSurface = cryo_theme_light_inverseSurface,
    inversePrimary = cryo_theme_light_inversePrimary,
    surfaceTint = cryo_theme_light_surfaceTint,
    outlineVariant = cryo_theme_light_outlineVariant,
    scrim = cryo_theme_light_scrim,
)

val CryoDarkColors = darkColorScheme(
    primary = cryo_theme_dark_primary,
    onPrimary = cryo_theme_dark_onPrimary,
    primaryContainer = cryo_theme_dark_primaryContainer,
    onPrimaryContainer = cryo_theme_dark_onPrimaryContainer,
    secondary = cryo_theme_dark_secondary,
    onSecondary = cryo_theme_dark_onSecondary,
    secondaryContainer = cryo_theme_dark_secondaryContainer,
    onSecondaryContainer = cryo_theme_dark_onSecondaryContainer,
    tertiary = cryo_theme_dark_tertiary,
    onTertiary = cryo_theme_dark_onTertiary,
    tertiaryContainer = cryo_theme_dark_tertiaryContainer,
    onTertiaryContainer = cryo_theme_dark_onTertiaryContainer,
    error = cryo_theme_dark_error,
    errorContainer = cryo_theme_dark_errorContainer,
    onError = cryo_theme_dark_onError,
    onErrorContainer = cryo_theme_dark_onErrorContainer,
    background = cryo_theme_dark_background,
    onBackground = cryo_theme_dark_onBackground,
    surface = cryo_theme_dark_surface,
    onSurface = cryo_theme_dark_onSurface,
    surfaceVariant = cryo_theme_dark_surfaceVariant,
    onSurfaceVariant = cryo_theme_dark_onSurfaceVariant,
    outline = cryo_theme_dark_outline,
    inverseOnSurface = cryo_theme_dark_inverseOnSurface,
    inverseSurface = cryo_theme_dark_inverseSurface,
    inversePrimary = cryo_theme_dark_inversePrimary,
    surfaceTint = cryo_theme_dark_surfaceTint,
    outlineVariant = cryo_theme_dark_outlineVariant,
    scrim = cryo_theme_dark_scrim,
)

val GeoLightColors = lightColorScheme(
    primary = geo_theme_light_primary,
    onPrimary = geo_theme_light_onPrimary,
    primaryContainer = geo_theme_light_primaryContainer,
    onPrimaryContainer = geo_theme_light_onPrimaryContainer,
    secondary = geo_theme_light_secondary,
    onSecondary = geo_theme_light_onSecondary,
    secondaryContainer = geo_theme_light_secondaryContainer,
    onSecondaryContainer = geo_theme_light_onSecondaryContainer,
    tertiary = geo_theme_light_tertiary,
    onTertiary = geo_theme_light_onTertiary,
    tertiaryContainer = geo_theme_light_tertiaryContainer,
    onTertiaryContainer = geo_theme_light_onTertiaryContainer,
    error = geo_theme_light_error,
    errorContainer = geo_theme_light_errorContainer,
    onError = geo_theme_light_onError,
    onErrorContainer = geo_theme_light_onErrorContainer,
    background = geo_theme_light_background,
    onBackground = geo_theme_light_onBackground,
    surface = geo_theme_light_surface,
    onSurface = geo_theme_light_onSurface,
    surfaceVariant = geo_theme_light_surfaceVariant,
    onSurfaceVariant = geo_theme_light_onSurfaceVariant,
    outline = geo_theme_light_outline,
    inverseOnSurface = geo_theme_light_inverseOnSurface,
    inverseSurface = geo_theme_light_inverseSurface,
    inversePrimary = geo_theme_light_inversePrimary,
    surfaceTint = geo_theme_light_surfaceTint,
    outlineVariant = geo_theme_light_outlineVariant,
    scrim = geo_theme_light_scrim,
)

val GeoDarkColors = darkColorScheme(
    primary = geo_theme_dark_primary,
    onPrimary = geo_theme_dark_onPrimary,
    primaryContainer = geo_theme_dark_primaryContainer,
    onPrimaryContainer = geo_theme_dark_onPrimaryContainer,
    secondary = geo_theme_dark_secondary,
    onSecondary = geo_theme_dark_onSecondary,
    secondaryContainer = geo_theme_dark_secondaryContainer,
    onSecondaryContainer = geo_theme_dark_onSecondaryContainer,
    tertiary = geo_theme_dark_tertiary,
    onTertiary = geo_theme_dark_onTertiary,
    tertiaryContainer = geo_theme_dark_tertiaryContainer,
    onTertiaryContainer = geo_theme_dark_onTertiaryContainer,
    error = geo_theme_dark_error,
    errorContainer = geo_theme_dark_errorContainer,
    onError = geo_theme_dark_onError,
    onErrorContainer = geo_theme_dark_onErrorContainer,
    background = geo_theme_dark_background,
    onBackground = geo_theme_dark_onBackground,
    surface = geo_theme_dark_surface,
    onSurface = geo_theme_dark_onSurface,
    surfaceVariant = geo_theme_dark_surfaceVariant,
    onSurfaceVariant = geo_theme_dark_onSurfaceVariant,
    outline = geo_theme_dark_outline,
    inverseOnSurface = geo_theme_dark_inverseOnSurface,
    inverseSurface = geo_theme_dark_inverseSurface,
    inversePrimary = geo_theme_dark_inversePrimary,
    surfaceTint = geo_theme_dark_surfaceTint,
    outlineVariant = geo_theme_dark_outlineVariant,
    scrim = geo_theme_dark_scrim,
)